{"ast":null,"code":"'use strict';\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n  var arr = [];\n\n  for (var i = 0; i < a.length; i += 1) {\n    arr[i] = a[i];\n  }\n\n  for (var j = 0; j < b.length; j += 1) {\n    arr[j + a.length] = b[j];\n  }\n\n  return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n  var arr = [];\n\n  for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n    arr[j] = arrLike[i];\n  }\n\n  return arr;\n};\n\nvar joiny = function (arr, joiner) {\n  var str = '';\n\n  for (var i = 0; i < arr.length; i += 1) {\n    str += arr[i];\n\n    if (i + 1 < arr.length) {\n      str += joiner;\n    }\n  }\n\n  return str;\n};\n\nmodule.exports = function bind(that) {\n  var target = this;\n\n  if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + target);\n  }\n\n  var args = slicy(arguments, 1);\n  var bound;\n\n  var binder = function () {\n    if (this instanceof bound) {\n      var result = target.apply(this, concatty(args, arguments));\n\n      if (Object(result) === result) {\n        return result;\n      }\n\n      return this;\n    }\n\n    return target.apply(that, concatty(args, arguments));\n  };\n\n  var boundLength = max(0, target.length - args.length);\n  var boundArgs = [];\n\n  for (var i = 0; i < boundLength; i++) {\n    boundArgs[i] = '$' + i;\n  }\n\n  bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n  if (target.prototype) {\n    var Empty = function Empty() {};\n\n    Empty.prototype = target.prototype;\n    bound.prototype = new Empty();\n    Empty.prototype = null;\n  }\n\n  return bound;\n};","map":{"version":3,"sources":["C:/work/pec_react/app_react_sample/react_ka_test/node_modules/function-bind/implementation.js"],"names":["ERROR_MESSAGE","toStr","Object","prototype","toString","max","Math","funcType","concatty","a","b","arr","i","length","j","slicy","arrLike","offset","joiny","joiner","str","module","exports","bind","that","target","apply","TypeError","args","arguments","bound","binder","result","boundLength","boundArgs","Function","Empty"],"mappings":"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","sourcesContent":["'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n"]},"metadata":{},"sourceType":"script"}