{"ast":null,"code":"'use strict';\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = hasPropertyDescriptors && GetIntrinsic('%Object.defineProperty%', true);\n\nif ($defineProperty) {\n  try {\n    $defineProperty({}, 'a', {\n      value: 1\n    });\n  } catch (e) {\n    // IE 8 has a broken defineProperty\n    $defineProperty = false;\n  }\n}\n\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar gopd = require('gopd');\n/** @type {(obj: Record<PropertyKey, unknown>, property: PropertyKey, value: unknown, nonEnumerable?: boolean | null, nonWritable?: boolean | null, nonConfigurable?: boolean | null, loose?: boolean) => void} */\n\n\nmodule.exports = function defineDataProperty(obj, property, value) {\n  if (!obj || typeof obj !== 'object' && typeof obj !== 'function') {\n    throw new $TypeError('`obj` must be an object or a function`');\n  }\n\n  if (typeof property !== 'string' && typeof property !== 'symbol') {\n    throw new $TypeError('`property` must be a string or a symbol`');\n  }\n\n  if (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n    throw new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n  }\n\n  if (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n    throw new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n  }\n\n  if (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n    throw new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n  }\n\n  if (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n    throw new $TypeError('`loose`, if provided, must be a boolean');\n  }\n\n  var nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n  var nonWritable = arguments.length > 4 ? arguments[4] : null;\n  var nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n  var loose = arguments.length > 6 ? arguments[6] : false;\n  /* @type {false | TypedPropertyDescriptor<unknown>} */\n\n  var desc = !!gopd && gopd(obj, property);\n\n  if ($defineProperty) {\n    $defineProperty(obj, property, {\n      configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n      enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n      value: value,\n      writable: nonWritable === null && desc ? desc.writable : !nonWritable\n    });\n  } else if (loose || !nonEnumerable && !nonWritable && !nonConfigurable) {\n    // must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n    obj[property] = value; // eslint-disable-line no-param-reassign\n  } else {\n    throw new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n  }\n};","map":{"version":3,"sources":["C:/work/pec_react/app_react_sample/react_ka_test/node_modules/define-data-property/index.js"],"names":["hasPropertyDescriptors","require","GetIntrinsic","$defineProperty","value","e","$SyntaxError","$TypeError","gopd","module","exports","defineDataProperty","obj","property","arguments","length","nonEnumerable","nonWritable","nonConfigurable","loose","desc","configurable","enumerable","writable"],"mappings":"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","sourcesContent":["'use strict';\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = hasPropertyDescriptors && GetIntrinsic('%Object.defineProperty%', true);\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar gopd = require('gopd');\n\n/** @type {(obj: Record<PropertyKey, unknown>, property: PropertyKey, value: unknown, nonEnumerable?: boolean | null, nonWritable?: boolean | null, nonConfigurable?: boolean | null, loose?: boolean) => void} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}